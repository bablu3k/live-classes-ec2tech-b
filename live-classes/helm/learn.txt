# Deploy nginx manually with YAML
kubectl create deployment nginx --image=nginx
kubectl expose deployment nginx --port=80 --type=NodePort

# Deploy nginx quickly with Helm
helm repo add bitnami https://charts.bitnami.com/bitnami

helm search repo nginx

helm install my-nginx bitnami/nginx



=========================

3 main objects while creating a Helm Chart :

Helm chart directory structure:

1.Chart.yaml → Metadata

2. values.yaml → Default values

3. templates/ → Kubernetes manifests with placeholders

====================================

helm create nginx-chart

# Explore files
tree nginx-chart/

# Deploy it
helm install my-nginx ./nginx-chart
kubectl get pods


=========================================

Helm templates use Go templating.


_helpers.tpl --> It stores reusable template snippets (written in Go templating language).

Think of it as functions in programming → instead of repeating the same logic in multiple YAML files, you define it once in _helpers.tpl and then call it anywhere.

Why Use _helpers.tpl?

Avoid Repetition – Same label logic can be reused across Deployment, Service, Ingress, etc.

Consistency – Ensures all resources follow the same naming/labels.

Maintainability – If you need to change naming/labels, you do it in one place.


============================

how Helm generates manifests ?

helm template ./nginx-chart/



===========================

helm install flask-demo ./flask-chart


helm upgrade my-nginx ./nginx-chart --set image.tag=1.21.6

# Check history
helm history my-nginx

# Rollback
helm rollback my-nginx 1

# Uninstall
helm uninstall my-nginx


======

how to pull helm tar files ?

helm pull oci://registry-1.docker.io/bitnamicharts/nginx --version 21.1.23